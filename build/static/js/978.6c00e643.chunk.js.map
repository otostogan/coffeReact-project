{"version":3,"file":"static/js/978.6c00e643.chunk.js","mappings":"yIA2EA,IACA,EAAe,IAA0B,2D,SClEzC,EARe,WACX,OACI,gBAAKA,UAAU,SAAf,UACI,gBAAKC,IAAKC,EAAKC,IAAI,GAAGC,MAAO,CAACC,MAAM,QAASC,OAAO,QAASC,OAAQ,YAAaC,QAAS,e,sJC8CvG,EA3CwB,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAEjBC,EAAkDD,EAAlDC,YAAaC,EAAqCF,EAArCE,MAAlB,GAAuDF,EAA9BG,GAA8BH,EAA1BI,aAAAA,OAA7B,MAA2C,GAA3C,EAA+CC,EAAQL,EAARK,KAEzCC,EAAOF,EAAYG,KAAI,SAACC,EAAMC,GAChC,OAAGA,EAAIL,EAAYM,OAAO,EACf,IAAMF,EAAM,IAEZ,IAAMA,KAMrB,OACI,oBAASjB,UAAU,cAAnB,UACI,SAACoB,EAAA,EAAD,WACI,iBAAKpB,UAAU,sBAAf,WACI,gBAAKA,UAAU,kBAAkBC,IAAKa,EAAOA,EAAKO,QAAU,GAAIlB,IAAKQ,KACrE,iBAAKX,UAAU,sBAAf,WACI,SAACsB,EAAA,EAAD,UACKX,KAEL,SAACY,EAAA,EAAD,CAAcC,KAAK,WACnB,iBAAKxB,UAAU,mBAAf,WACI,4CACEa,EAAcE,EAAO,SAE3B,iBAAKf,UAAU,mBAAf,WACI,4CACEU,MAEN,iBAAKV,UAAU,oBAAf,WACI,sCACCyB,KAAKC,MAAM,EAAAD,KAAKE,SAAsB,GAAK,kB,kBCKxE,EAnCoB,SAACC,GAEjB,OAA+BC,EAAAA,EAAAA,MAAxBC,EAAP,EAAOA,eAAgBN,EAAvB,EAAuBA,KAEvB,GAAmCO,EAAAA,EAAAA,KAA5BC,EAAP,EAAOA,QAAgBC,GAAvB,EAAgBC,MAAhB,EAAuBD,UAEvB,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAO1B,EAAP,KAAc2B,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACNC,MACD,IAEH,IAAMA,EAAY,WACdL,EAAST,EAAMM,GACVS,KAAKC,IAERA,EAAgB,SAACC,GACnBL,EAASK,IAKPC,EAAY,CACd/B,MAAOF,EAAME,MACbgC,GAAIC,GAGR,OACI,iBAAK5C,UAAU,oBAAf,WACI,SAAC6C,EAAA,EAAD,CAAQC,KAAMJ,IACbV,GAAU,SAACe,EAAA,EAAD,KAAY,SAAC,EAAD,CAAiBtC,MAAOA,S,mFCtB3D,EAfe,SAAC,GAAW,IAAVqC,EAAS,EAATA,KAERH,EAAaG,EAAbH,GAAIhC,EAASmC,EAATnC,MAIT,OACI,oBAASP,MAAO,CAAC4C,WAAW,OAAD,OAASL,EAAT,oCAA+C3C,UAAU,SAApF,UACI,SAACoB,EAAA,EAAD,WACI,SAACE,EAAA,EAAD,UAAQX,U,wFCZXW,EAAQ,SAACM,GAClB,OACI,eAAI5B,UAAU,QAAd,SAAuB4B,EAAMqB,YAGxBC,EAAiB,SAACtB,GAC3B,OACI,eAAI5B,UAAU,kBAAd,SAAiC4B,EAAMqB,a,8GCwE/C,EA5EqB,WAEjB,IAAME,EAAW,qCAEjB,ECPmB,WAEnB,OAA8BhB,EAAAA,EAAAA,WAAS,GAAvC,eAAOH,EAAP,KAAgBoB,EAAhB,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcmB,EAAd,KAIMC,GAFW,IAAIC,iBAELC,EAAAA,EAAAA,aAAW,mCAAE,WAAOC,GAAP,kGAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAC,eAAgB,oBAApE,kBAGEC,MAAMJ,EAAK,CAC9BC,OAAAA,EACAC,KAAAA,EACAC,QAAAA,IANiB,WAGfE,EAHe,QASRC,GATQ,sBAUX,IAAIC,MAAJ,0BAA6BP,EAA7B,oBAA4CK,EAASG,SAV1C,wBAaFH,EAASI,OAbP,eAafC,EAbe,OAerBf,GAAW,GAfU,kBAiBde,GAjBc,wCAoBrBf,GAAW,GACXC,EAAS,KAAMe,SArBM,+DAAF,sDAyBxB,KAMH,MAAO,CAACpC,QAAAA,EAAQE,MAAAA,EAAMoB,QAAAA,EAAQe,YAJXb,EAAAA,EAAAA,cAAY,WAC3BH,EAAS,QACX,KD7B4CiB,GAAvCtC,EAAP,EAAOA,QAASsB,EAAhB,EAAgBA,QAASpB,EAAzB,EAAyBA,MAAOmC,EAAhC,EAAgCA,WAE1BE,EAAM,mCAAG,WAAOC,EAAMC,GAAb,gFACLC,GAAWC,EAAAA,EAAAA,IAAU,CACvBC,UAAW,8CACXhB,QAAS,CAAE,kBAAmB,SAHvB,SAKKc,EAASG,OAAOC,UAAU,CACtCC,MAAO,QACPP,KAAMA,EACNC,QAASA,IACVlC,MAAK,SAAAE,GAEJ,GAAgB,YAAbA,EAAIjB,KACH,OAAOiB,EAAIqB,SAASkB,QAAQhE,IAAIiE,MAZ7B,cAKPxC,EALO,yBAgBJA,GAhBI,2CAAH,wDAkBNyC,EAAW,mCAAG,WAAO1D,EAAM2D,GAAb,uFACE7B,EAAQ,GAAD,OAAIH,EAAJ,YAAgB3B,IADzB,cACViB,EADU,yBAETA,EAAI2C,QAAO,SAACnE,EAAMC,GAAP,OAAYA,EAAIiE,MAFlB,2CAAH,wDAIXlD,EAAQ,mCAAG,WAAOT,EAAMZ,GAAb,yFACK0C,EAAQ,GAAD,OAAIH,EAAJ,YAAgB3B,EAAhB,YAAwBZ,IADpC,cACP6B,EADO,gBAES8B,EAAO3D,EAAIA,GAFpB,cAEPyE,EAFO,OAIb5C,EAAI3B,KAAOuE,EAAQ,GAAGvE,KAJT,kBAMN2B,GANM,2CAAH,wDAQR6C,EAAU,mCAAG,sGAAQ9D,EAAR,EAAQA,KAAM2D,EAAd,EAAcA,OAAQX,EAAtB,EAAsBA,KAAtB,SACSU,EAAY1D,EAAM2D,GAD3B,cACTI,EADS,gBAEOhB,EAAOC,EAAMW,GAFpB,cAETE,EAFS,OAIXG,EAAS,GAEbD,EAAUE,SAAQ,SAACxE,EAAMC,GACrBsE,EAAOE,KAAK,CACR/E,MAAOM,EAAKN,MACZD,YAAaO,EAAKP,YAClBG,YAAaI,EAAKJ,YAClBV,IAAKkF,EAAQnE,GAAGP,MAChBG,KAAMuE,EAAQnE,GAAGJ,KACjBF,GAAI2E,EAAUrE,GAAGN,QAbV,kBAiBR4E,GAjBQ,4CAAH,sDA4BVP,EAAgB,SAAC/E,GACnB,MAAO,CACHS,MAAOT,EAAIyF,gBACX/E,GAAIV,EAAIU,GACRE,KAAMZ,EAAIY,OAIlB,MAAO,CAACkB,QAAAA,EAASE,MAAAA,EAAQmC,WAAAA,EAAYE,OAAAA,EAAQW,YAAAA,EAAajD,SAAAA,EAAUqD,WAAAA,K","sources":["components/loader/loader.svg","components/loader/Loader.js","components/sections/descSingleCoffe/DescSingleCoffe.js","components/pages/SingleCoffe.js","components/sections/banner/Banner.js","components/title/Title.js","services/coffeApi.js","hooks/http.hook.js"],"sourcesContent":["var _circle, _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLoader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"L2\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 100 100\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: 4,\n    strokeMiterlimit: 10,\n    cx: 50,\n    cy: 50,\n    r: 48\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    stroke: \"#000\",\n    strokeWidth: 4,\n    strokeMiterlimit: 10,\n    x1: 50,\n    y1: 50,\n    x2: 85,\n    y2: 50.5\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"2s\",\n    type: \"rotate\",\n    from: \"0 50 50\",\n    to: \"360 50 50\",\n    repeatCount: \"indefinite\"\n  }))), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    stroke: \"#000\",\n    strokeWidth: 4,\n    strokeMiterlimit: 10,\n    x1: 50,\n    y1: 50,\n    x2: 49.5,\n    y2: 74\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    dur: \"15s\",\n    type: \"rotate\",\n    from: \"0 50 50\",\n    to: \"360 50 50\",\n    repeatCount: \"indefinite\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLoader);\nexport default __webpack_public_path__ + \"static/media/loader.148439b1ff543cb578d6b3d3c935c2a5.svg\";\nexport { ForwardRef as ReactComponent };","import img from './loader.svg';\r\n\r\nconst Loader = () =>{\r\n    return(\r\n        <div className=\"loader\">\r\n            <img src={img} alt=\"\" style={{width:'150px', height:'150px', margin: '50px auto', display: \"block\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import {Container} from \"react-bootstrap\";\r\n\r\nimport {TitleSecondary} from '../../title/Title';\r\nimport CoffeDivider from '../../coffeDivider/CoffeDivider';\r\n\r\nimport './desc-single.scss';\r\n\r\n\r\nconst DescSingleCoffe = ({coffe}) =>{\r\n\r\n    let {description, title, id, ingredients = [], urls} = coffe;\r\n\r\n    const ingr = ingredients.map((item, i) => {\r\n        if(i < ingredients.length-1){\r\n            return ' ' + item +',';\r\n        }else{\r\n            return ' ' + item ;\r\n        }\r\n    })\r\n    \r\n\r\n  \r\n    return(\r\n        <section className=\"desc-single\">\r\n            <Container>\r\n                <div className=\"desc-single-wrapper\">\r\n                    <img className=\"desc-single-img\" src={urls ? urls.regular : ''} alt={title}/>\r\n                    <div className=\"desc-single-content\">\r\n                        <TitleSecondary>\r\n                            {title}\r\n                        </TitleSecondary>\r\n                        <CoffeDivider type=\"black\"/>\r\n                        <div className=\"desc-single-text\">\r\n                            <span>Ingredients: </span>\r\n                             {ingredients ? ingr : null}\r\n                        </div>\r\n                        <div className=\"desc-single-text\">\r\n                            <span>Description: </span>\r\n                             {description}\r\n                        </div>\r\n                        <div className=\"desc-single-price\">\r\n                            <span>Price: </span>\r\n                            {Math.floor(Math.random() * (10 - 5) + 5) + '$'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default DescSingleCoffe;","import {useParams} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\n\r\nimport CoffeService from '../../services/coffeApi'\r\n\r\nimport Banner from '../sections/banner/Banner';\r\nimport DescSingleCoffe from '../sections/descSingleCoffe/DescSingleCoffe';\r\nimport Loader from '../loader/Loader';\r\n\r\nimport bannerBg from  '../sections/banner/about-banner.jpg';\r\n\r\n\r\nconst SingleCoffe = (props) =>{\r\n\r\n    const {availabilityID, type} = useParams();\r\n\r\n    const {loading, error, getCoffe} = CoffeService();\r\n\r\n    const [coffe, setCoffe] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        getCoffeF();\r\n    }, []);\r\n\r\n    const getCoffeF = () =>{\r\n        getCoffe(type, availabilityID)\r\n            .then(onCoffeLoaded)\r\n    }\r\n    const onCoffeLoaded = (res) => {\r\n        setCoffe(res);\r\n    }\r\n\r\n    \r\n\r\n    const BannerSet = {\r\n        title: coffe.title,\r\n        bg: bannerBg\r\n    }\r\n    \r\n    return (\r\n        <div className=\"single-coffe-page\">\r\n            <Banner info={BannerSet}/>\r\n            {loading ? <Loader/> : <DescSingleCoffe coffe={coffe}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCoffe;","import {Container} from \"react-bootstrap\";\r\nimport {Title} from '../../title/Title';\r\n\r\nimport './banner.scss';\r\n\r\nconst Banner = ({info}) =>{\r\n\r\n    let {bg, title} = info;\r\n    \r\n    \r\n\r\n    return (\r\n        <section style={{background: `url(${bg})  50% center / cover no-repeat`}} className=\"banner\">\r\n            <Container>\r\n                <Title>{title}</Title>\r\n            </Container>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Banner;","import './title.scss';\r\n\r\nexport const Title = (props) =>{\r\n    return(\r\n        <h1 className=\"title\">{props.children}</h1>\r\n    )\r\n}\r\nexport const TitleSecondary = (props) =>{\r\n    return(\r\n        <h2 className=\"title-secondary\">{props.children}</h2>\r\n    )\r\n}\r\n\r\n// export default Title;","import {useHttp} from '../hooks/http.hook';\r\nimport { createApi } from 'unsplash-js';\r\n\r\n\r\n\r\nconst CoffeService = () => {\r\n\r\n    const _baseUrl = \"https://api.sampleapis.com/coffee/\";\r\n\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const getImg = async (page, perPage) =>{\r\n        const unsplash = createApi({\r\n            accessKey: 'L8kh1rj5Pxc9xPGKS0V9Y3XxB65A4wtfwzXmGdpunes',\r\n            headers: { 'X-Custom-Header': 'foo' },\r\n        });\r\n        let res = await unsplash.search.getPhotos({\r\n            query: 'coffe',\r\n            page: page,\r\n            perPage: perPage\r\n        }).then(res => {\r\n          \r\n            if(res.type === 'success'){\r\n                return res.response.results.map(_transformImg);    \r\n                             \r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    const getAllCoffe = async (type, number) => {\r\n        const res = await request(`${_baseUrl}/${type}`);\r\n        return res.filter((item, i)=> i < number);\r\n    }\r\n    const getCoffe = async (type, id) => {\r\n        const res = await request(`${_baseUrl}/${type}/${id}`);\r\n        const infoImg = await getImg(id, id);\r\n\r\n        res.urls = infoImg[0].urls;\r\n\r\n        return res;\r\n    }\r\n    const wholeItems = async ({type, number, page}) =>{\r\n        const infoCoffe = await getAllCoffe(type, number);\r\n        const infoImg = await getImg(page, number);\r\n\r\n        let newArr = [];\r\n\r\n        infoCoffe.forEach((item, i) => {\r\n            newArr.push({\r\n                title: item.title,\r\n                description: item.description,\r\n                ingredients: item.ingredients,\r\n                alt: infoImg[i].title,\r\n                urls: infoImg[i].urls,\r\n                id: infoCoffe[i].id\r\n            })\r\n        })\r\n    \r\n        return newArr;\r\n    }\r\n    const _transformCoffe = (coffe) => {\r\n        return {\r\n            title: coffe.title,\r\n            description: coffe.description,\r\n            ingredients: coffe.ingredients,\r\n            id: coffe.id,\r\n            price: Math.random * (5 - 1) -1,\r\n        }\r\n    }\r\n    const _transformImg = (img) => {\r\n        return {\r\n            title: img.alt_description,\r\n            id: img.id,\r\n            urls: img.urls\r\n        }\r\n    }\r\n\r\n    return {loading, error,  clearError, getImg, getAllCoffe, getCoffe, wholeItems}\r\n\r\n}\r\n\r\nexport default CoffeService;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    let controller = new AbortController();\r\n    \r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        try{\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers\r\n            })\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n\r\n        }catch(error){\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n    }, []) \r\n\r\n    const clearError = useCallback(() => {\r\n        setError(null);\r\n    },[]);\r\n\r\n    return {loading,error,request,clearError}\r\n\r\n}"],"names":["className","src","img","alt","style","width","height","margin","display","coffe","description","title","id","ingredients","urls","ingr","map","item","i","length","Container","regular","Title","CoffeDivider","type","Math","floor","random","props","useParams","availabilityID","CoffeService","loading","getCoffe","error","useState","setCoffe","useEffect","getCoffeF","then","onCoffeLoaded","res","BannerSet","bg","bannerBg","Banner","info","Loader","background","children","TitleSecondary","_baseUrl","setLoading","setError","request","AbortController","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","getImg","page","perPage","unsplash","createApi","accessKey","search","getPhotos","query","results","_transformImg","getAllCoffe","number","filter","infoImg","wholeItems","infoCoffe","newArr","forEach","push","alt_description"],"sourceRoot":""}